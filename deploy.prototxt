name: "mnist_caffe"
input: "data"
input_shape {
  dim: 10
  dim: 3
  dim: 28
  dim: 28
}
layer {
  name: "bnorm0"
  type: "BatchNorm"
  bottom: "data"
  top: "bnorm0"
#  batch_norm_param {
#    use_global_stats: true
#  }
#  param {
#    lr_mult: 0
#  }
#  param {
#    lr_mult: 0
#  }
#  param {
#    lr_mult: 0
#  }
#  include {
#    phase: TEST
#  }
}
layer {
    name: "bnorm0/scale"
    bottom: "bnorm0"
    top: "bnorm0"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "bnorm0"
  top: "conv1"
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    stride: 1
  }
}
layer {
  name: "bnorm1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "bnorm1"
}
layer {
    name: "bnorm1/scale"
    type: "Scale"
    bottom: "bnorm1"
    top: "bnorm1"
    scale_param {
        bias_term: true
    }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bnorm1"
  top: "relu1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "relu1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 2
    kernel_size: 5
    stride: 1
  }
}
layer {
  name: "bnorm2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bnorm2"
}
layer {
    name: "bnorm2/scale"
    type: "Scale"
    bottom: "bnorm2"
    top: "bnorm2"
    scale_param {
        bias_term: true
    }
}
layer {
  name: "relu12"
  type: "ReLU"
  bottom: "bnorm2"
  top: "relu2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "relu2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "flatten"
  type: "Flatten"
  bottom: "pool2"
  top: "flatten"
}
layer {
  name: "dense1"
  type: "InnerProduct"
  bottom: "flatten"
  top: "dense1"
  inner_product_param {
    num_output: 1024
  }
}
layer {
  name: "dense1/relu"
  type: "ReLU"
  bottom: "dense1"
  top: "dense1"
}
layer {
  name: "dense2"
  type: "InnerProduct"
  bottom: "dense1"
  top: "dense2"
  inner_product_param {
    num_output: 10
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "dense2"
  top: "probs"
}